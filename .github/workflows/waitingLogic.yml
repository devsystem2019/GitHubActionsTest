# This workflow uses ServiceNow custom actions that are certified by ServiceNow.

name: Waiting Logic Workflow
on: workflow_dispatch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  #   types: [opened, synchronize, reopened]

# on:
#   schedule:
#     - cron: '*/2 * * * *'


jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean compile

  test:
    name: 'Test'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.0.0
        
    - name: Run Tests with Maven
      run: mvn -B test --file pom.xml

    - name: ServiceNow DevOps Unit Test Results
    # You may pin to the exact commit or the version.
      uses: ServiceNow/servicenow-devops-test-report@dev
      with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # devops-integration-user-name: '${{ secrets.SN_DEVOPS_USER }}'
          # devops-integration-user-password: '${{ secrets.SN_DEVOPS_PASSWORD }}'
          # ServiceNow Instance Name
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Job Name
          job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
          # Github Context
          context-github: ${{ toJSON(github) }}
          # JUnit xml report file name with path
          xml-report-filename: target/ # if only JUnit tests, use target/surefire-reports/testng-results.xml
  # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml
        
 
  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow DevOps Change Automation
        uses: ServiceNow/servicenow-devops-change@dev
        with:
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          # devops-integration-user-name: '${{ secrets.SN_DEVOPS_USER }}'
          # devops-integration-user-password: '${{ secrets.SN_DEVOPS_PASSWORD }}'
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          job-name: Deploy
          context-github: '${{ toJSON(github) }}'
          timeout: 3600
          interval: 100
          change-request: >-
            { "setCloseCode": "true", "attributes": { "short_description":
            "Automated test Software Deployment", "chg_model":
            "adffaa9e4370211072b7f6be5bb8f2ed", "description": "Automated
            Software Deployment.", "assignment_group":
            "a715cd759f2002002920bde8132e7018", "implementation_plan": "Software
            update is tested and results can be found in Test Summaries Tab.",
            "backout_plan": "When software fails in production, the previous
            software release will be re-deployed.", "test_plan": "Testing if the
            software was successfully deployed" } }
