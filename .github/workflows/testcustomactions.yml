name: testcustomactions

on:
  pull_request:
    branches: ['master']
  workflow_dispatch:


jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Setup JDK 11 for Sonar Cloud
        uses: actions/setup-java@v1
        with:
            java-version: 11
      
      - name: Maven Build
        run: mvn clean install -DskipTests=true
        
      - name: Sonar Cloud Analysis
        if: success() # always() failure() success()
        run: >
            mvn -B verify -DskipTests sonar:sonar
            -Dsonar.projectKey=$SONAR_PROJECT_KEY
            -Dsonar.organization=$SONAR_ORG_KEY
            -Dsonar.host.url=$SONAR_URL
            -Dsonar.login=$SONAR_TOKEN
        env:
            GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
            SONAR_URL: ${{ secrets.SONAR_URL }}
            SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}
            
      - name: ServiceNow DevOps Sonar Scan Results
        uses: ServiceNow/servicenow-devops-sonar@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          job-name: 'Build'
          context-github: ${{ toJSON(github) }}
          sonar-host-url: ${{ secrets.SONAR_URL }}
          sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}
          sonar-org-key: ${{ secrets.SONAR_ORG_KEY }}
      
      - name: Run JUnit Tests
        run: mvn test -Dmaven.test.failure.ignore=true surefire-report:report
        
      - name: ServiceNow DevOps Unit Test Results
        uses: ServiceNow/servicenow-devops-test-report@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Build'
          xml-report-filename: target/surefire-reports/testng-results.xml
  
  
  integrationTest:
    needs: build
    name: Integration Tests
    runs-on: self-hosted
    steps:
      - name: Register Artifact
        uses: ServiceNow/servicenow-devops-register-artifact@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Integration Tests'
          artifacts: ' [{"name": "com:firstrepo","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'

      - name: Register Package
        uses: ServiceNow/servicenow-devops-register-package@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Integration Tests'
          artifacts: ' [{"name": "com:firstrepo","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'
          package-name: 'firstrepo.war'
      
      
  deploy:
    needs: integrationTest
    name: Deploy
    runs-on: self-hosted
    steps:
      - name: Custom Change
        uses: ServiceNow/servicenow-devops-change@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Deploy'
          change-request: '{"setCloseCode":"true","attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed."}}'
          interval: '100'
          timeout: '3600'
          
      - name: Run deployment scripts
        run: echo Completed Deployment.
        
